###
#
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# If you need to do some changes in a local-action used in this
# workflow, make sure you change the action-flag to your working
# branch-name to get the latest action functionality.
#
# Example: swisspost/design-system/.github/actions/setup-pnpm@my-working-branch-name
#
# Don't forget to change the action-flag back to 'main',
# once you have finished your work on the local-action!
#
# https://docs.github.com/en/actions/creating-actions/about-custom-actions#using-release-management-for-actions
#
# NOTE: pnpm caching support requires pnpm version >= 6.10.0
#
###

name: Setup pnpm
description: Provides node and pnpm in a specific version.

inputs:
  use_cache:
    description: Specify wether to use the pnpm cache or not
    default: true
    type: boolean

runs:
  using: composite
  steps:
    - name: Detect wanted versions
      id: wanted-version
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs')
          const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'))

          return {
            node: pkg.engines.node,
            pnpm: pkg.packageManager
          }

    # The action automatically uses the "packageManager" field from the package.json file
    - name: Install pnpm
      uses: pnpm/action-setup@v4

    - name: Install node with pnpm cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ fromJSON(steps.wanted-version.outputs.result).node }}
        cache: ${{ inputs.use_cache == 'true' && 'pnpm' || '' }}

    - name: Summary
      shell: bash
      run: |
        echo "Installed versions:"
        echo "- node: ${{ fromJSON(steps.wanted-versions.outputs.result).node }}"
        echo "- pnpm: ${{ fromJSON(steps.wanted-versions.outputs.result).pnpm }}"
