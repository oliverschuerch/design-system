@forward './../variables/options';

@use 'sass:map';

@use './../functions/contrast' as contrast-fn;
@use './../mixins/form-validation' as form-validation-mx;
@use './../mixins/icons' as icons-mx;
@use './../placeholders/form-validation' as form-validation-ph;
@use './../variables/components/form-validation';
@use './../variables/components/forms';

@each $state, $color, $icon in form-validation.$form-validations {
  @include form-validation-mx.form-validation-state-selector($state) {
    // show the first feedback message only
    ~ .#{$state}-feedback:not(.#{$state}-feedback ~ .#{$state}-feedback) {
      display: block;
    }
  }

  .form-control,
  .form-select {
    @include form-validation-mx.form-validation-state-selector($state) {
      &:not(:disabled) {
        border-color: $color;
        z-index: 1;
      }
    }

    ~ .#{$state}-feedback:not(.#{$state}-feedback ~ .#{$state}-feedback) {
      margin-block-start: -1 * forms.$input-border-width;
    }
  }

  .#{$state}-feedback {
    background-color: $color;
    color: contrast-fn.get-best-contrast-text($color);
    @extend %form-feedback;

    &::before {
      @include icons-mx.icon($icon);
      @extend %form-feedback-icon;
    }
  }
}
